# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python test and formatting

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      PYTHONPATH: ${{ github.workspace }}
      GDRIVE_CREDENTIALS_DATA: ${{ secrets.GDRIVE_CREDENTIALS_DATA }}
      
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"
        cache: 'pip'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U ruff pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with ruff
      run: |
        # Fix errors found by check, if this can't be done automatically fail
        ruff check --fix
        # Format the code
        ruff format
    - uses: iterative/setup-dvc@v1
    - name: Get Data
      run: dvc pull
    - name: Test with pytest
      run: |
        if find tests/ -type f -name "*_test.py" | grep -q .; then
          echo "Test files found in subdirectories, running tests..."
          pytest tests/
        else
          echo "No test files found in subdirectories, skipping tests."
        fi
    - name: Statically check for types
      run: |
        mypy project --ignore-missing-imports
